import { colorize } from '../utils/colors';
import { HelpAction } from '@/types';
import { MenuNavigator, NavigationUtils } from '../utils/navigation';

export class HelpManager {
  private navigator: MenuNavigator;
  
  constructor() {
    this.navigator = new MenuNavigator();
  }
  
  async showHelp(): Promise<void> {
    this.navigator.enterMenu('Help & Documentation');
    
    while (true) {
      console.log(`\n${colorize.highlight('üìö Help & Documentation')}`);
      
      const action = await NavigationUtils.enhancedSelect<HelpAction>({
        message: 'What would you like to learn about?',
        choices: [
          { name: 'üìñ General Help & Overview', value: 'overview' },
          { name: 'üöÄ Quick Start Guide', value: 'quickstart' },
          { name: 'üìÅ File Locations & Structure', value: 'files' },
          { name: '‚å®Ô∏è Command Line Usage', value: 'cli' },
          { name: this.navigator.getBackButtonText(), value: 'back' }
        ],
        allowEscBack: true
      });

      switch (action) {
      case 'overview':
        console.log(`${colorize.highlight('\nüìñ Claude CMD v1.0 Overview')}`);
        console.log(`
${colorize.bold('Purpose:')}
This tool helps you manage Claude commands, configurations, and development workflows
following Anthropic's Claude Code best practices.

${colorize.bold('Key Features:')}
‚Ä¢ Command Management - Install, search, and manage Claude commands
‚Ä¢ CLAUDE.md Files - Create and manage project configurations  
‚Ä¢ Custom Commands - Create commands with $ARGUMENTS support
‚Ä¢ Project Init - Set up Claude environment for any project
‚Ä¢ Security - Manage permissions and tool allowlists

${colorize.bold('Benefits:')}
‚Ä¢ Standardized Claude development environment
‚Ä¢ Team collaboration and configuration sharing
‚Ä¢ Custom command creation for repeated tasks
‚Ä¢ Security and permission management
‚Ä¢ Best practice enforcement

${colorize.dim('Created by Muhammed Kƒ±lƒ±√ß (@kiliczsh)')}
`);
        break;
        
      case 'quickstart':
        console.log(`${colorize.highlight('\nüöÄ Quick Start Guide')}`);
        console.log(`
${colorize.bold('Step 1: Initialize Your Project')}
Run 'Project Initialization' from the main menu to:
‚Ä¢ Detect your project type (Node.js, React, Python, etc.)
‚Ä¢ Create appropriate CLAUDE.md file
‚Ä¢ Set up basic security profile

${colorize.bold('Step 2: Customize Your Setup')}
‚Ä¢ Edit CLAUDE.md for project-specific instructions
‚Ä¢ Create custom commands with $ARGUMENTS for workflows
‚Ä¢ Install useful commands from the command repository
‚Ä¢ Configure security settings

${colorize.bold('Step 3: Start Using Claude')}
‚Ä¢ Use custom commands via / menu in Claude conversations
‚Ä¢ Reference your CLAUDE.md for context
‚Ä¢ Install new commands as needed
‚Ä¢ Share configurations with your team

${colorize.bold('Pro Tips:')}
‚Ä¢ Commands in ~/.claude/commands/ become available via / menu
‚Ä¢ Use $ARGUMENTS in commands for parameter passing
‚Ä¢ Keep CLAUDE.md updated with project changes
‚Ä¢ Regular security audits with permissions menu
`);
        break;
        
      case 'files':
        console.log(`${colorize.highlight('\nüìÅ File Locations & Structure')}`);
        console.log(`
${colorize.bold('Global Claude Directory: ~/.claude/')}
‚Ä¢ commands/           - All Claude commands (installed + custom)
‚Ä¢ settings.json       - Global configuration

${colorize.bold('Project Files:')}
‚Ä¢ CLAUDE.md          - Main project instructions for Claude
‚Ä¢ CLAUDE.local.md    - Local overrides (gitignored)
‚Ä¢ .claude/           - Project-specific configurations

${colorize.bold('Command Structure:')}
‚Ä¢ Each command is a .md file with metadata
‚Ä¢ YAML frontmatter for command info
‚Ä¢ Markdown content for instructions
‚Ä¢ Use $ARGUMENTS placeholder for parameter passing
‚Ä¢ Commands become available via / menu in Claude
`);
        break;
        
      case 'cli':
        console.log(`${colorize.highlight('\n‚å®Ô∏è Command Line Usage')}`);
        console.log(`
${colorize.bold('Interactive Mode (Recommended):')}
‚Ä¢ claude-cmd                    - Launch full interactive interface

${colorize.bold('Direct Commands:')}
‚Ä¢ claude-cmd install <id>       - Install specific command by ID
‚Ä¢ claude-cmd list               - List all installed commands  
‚Ä¢ claude-cmd search <query>     - Search available commands
‚Ä¢ claude-cmd delete <id>        - Remove installed command
‚Ä¢ claude-cmd --help             - Show basic help

${colorize.bold('Examples:')}
‚Ä¢ claude-cmd install 1          - Install command #1
‚Ä¢ claude-cmd search "git"       - Find git-related commands
‚Ä¢ claude-cmd list               - Show what's installed

${colorize.bold('Tips:')}
‚Ä¢ Interactive mode offers full feature access
‚Ä¢ Direct commands are great for script integration
‚Ä¢ Use quotes for multi-word search terms
‚Ä¢ Check command IDs with 'list' before installing
`);
        break;
        case 'back':
          this.navigator.exitMenu();
          return;
      }
      
      await this.navigator.pauseForUser();
    }
  }
} 